server:
  port: 8989
  
spring:
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true
    thymeleaf:
      cache: false

  datasource:

#    url: jdbc:mariadb://127.0.0.1:3306/sample
#    username: root
#    password: 1234
#    driver-class-name: org.mariadb.jdbc.Driver

    #mariadb는 자신이 사용하고자 하는 스키마를 입력해야지 들어가짐.
    url: jdbc:mariadb://182.229.34.184:3306/301project
    username: root
    password: hkit301301
    driver-class-name: org.mariadb.jdbc.Driver


  jpa:
    database-platform: org.hibernate.dialect.MariaDB103Dialect  #JPA가 사용할 database의 dialect 설정
    properties:
      hibernate:
        hibernate:
        "[format_sql]": true            #SQL을 보기 좋게 출력
        "[user_sql_comments]": true     #SQL생성 시 주석 포함
        "[highlight_sql]": true         #SQL에 색깔
        "[hbm2ddl.auto]": update
        #"[implicit_naming_strategy]": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy" -> 기본값으로 설정되어 있어서 따로 설정하지 않아도 무방함
    open-in-view: false
    show-sql: true
    
   #Spring OAuth
  security:
    oauth2:
     client:
      registration:
       google:
        client-id: 1013147133735-j01tfa0ai92ui0cdlbfl0shquj5b09qk.apps.googleusercontent.com
        client-secret: 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
        scope:
        - email
        - profile
        
       facebook:
        client-id: 6058431824255906
        client-secret: 8fbf42990f549b07de9f8fec80579dac
        scope:
        - email
        - public_profile
        redirect-uri: http://localhost:8989/login/oauth2/code/facebook
        #해당 주소는 Security 라이브러리가 관리하기 때문에 고정되어있음. 네이버는 고정되어있지 않지만, 규칙에 맞게 적어주는게 좋음. 페이스북, 구글 생략가능함.
        
       naver:
        client-id: BqLwzWiENtAyXuiCYgDi
        client-secret: lIdmrbLqi4
        scope:
        - name
        - email
        client-name: Naver
        authorization-grant-type: authorization_code
        redirect-uri: http://localhost:8989/login/oauth2/code/naver #해당 주소는 Security 라이브러리가 관리하기 때문에 고정되어있음. 네이버는 고정되어있지 않지만, 규칙에 맞게 적어주는게 좋음.
       
       kakao:
        client-id: a67d1969e828bc47302124872164e46d
        redirect-uri: http://localhost:8989/login/oauth2/code/kakao
        client-authentication-method: POST
        authorization-grant-type: authorization_code
        scope: profile_nickname, profile_image, account_email
        client-name: Kakao
      
      #네이버는 provider 객체가 없기 때문에 Spring security가 사용할 수 없기 때문에 따로 provider 설정을 해줘야한다.   #     provider:
      provider:
       naver:
        authorization-uri: https://nid.naver.com/oauth2.0/authorize #네이버 로그인 창이 뜸. font에서 네이버링크로 요청했을 때, 최종적으로 호출되는 주소임.
        token-uri: https://nid.naver.com/oauth2.0/token             #토큰을 생성하기 위한 요청주소
        user-info-uri: https://openapi.naver.com/v1/nid/me          #프로필 정보를 받기 위한 요청주소
        user-name-attribute: response #회원정보를 json으로 받을 때 response라는 키 값으로 네이터가 리턴해준다.
       
       kakao:
          authorization-uri: https://kauth.kakao.com/oauth/authorize
          token-uri: https://kauth.kakao.com/oauth/token
          user-info-uri: https://kapi.kakao.com/v2/user/me
          user-name-attribute: id
logging:
  level:
    org:
      apache:
        coyote:
          http11: debug

      hiberante:
        SQL: debug

    boardexample:
      myboard: info


      
      
